
# #######################################################################################
# AUTOGENERATED HYPR CONFIG.
# PLEASE USE THE CONFIG PROVIDED IN THE GIT REPO /examples/hypr.conf AND EDIT IT,
# OR EDIT THIS ONE ACCORDING TO THE WIKI INSTRUCTIONS.
# #######################################################################################

# autogenerated = 1 # remove this line to remove the warning

# This is an example Hyprland config file.
# Refer to the wiki for more information.
# https://wiki.hyprland.org/Configuring/Configuring-Hyprland/

# Please note not all available settings / options are set here.
# For a full list, see the wiki

# You can split this configuration into multiple files
# Create your files separately and then link them to this file like this:
# source = ~/.config/hypr/myColors.conf


################
### MONITORS ###
################

# See https://wiki.hyprland.org/Configuring/Monitors/
monitor=,preferred,auto,1
###################
### MY PROGRAMS ###
###################

# See https://wiki.hyprland.org/Configuring/Keywords/

# Set programs that you use
$terminal = kitty
 # $terminal = foot
$fileManager = nemo
$menu = tofi-drun -c ~/.config/tofi/configA --drun-launch=true
# $browser = thorium-browser --enable-features=UseOzonePlatform --ozone-platform=wayland
$notes = obsidian
$editor = nvim
# $editor-alt = subl
# $colorPicker = hyprpicker

# --enable-features=UseOzonePlatform --ozone-platform=wayland use this flag to launch CEF/Electron apps in wayland

#################
### AUTOSTART ###
#################

# Autostart necessary processes (like notifications daemons, status bars, etc.)
# Or execute your favorite apps at launch like this:

exec-once=/usr/lib/polkit-kde-authentication-agent-1 #Polkit to manage passwords
exec-once=/usr/bin/mako
exec-once=waybar # topbar
# exec-once=qs -c caelestia 
# exec-once=qs -c caelestia ipc call wallpaper -r ~/Pictures/Wallpapers/
# exec-once=qs -c dms
# exec-once=caelestia wallpaper -r ~/Pictures/Wallpapers/

exec-once = swww-daemon # wallpaper
# exec-once = swww img ~/.config/assets/backgrounds/cat_leaves.png  --transition-fps 255 --transition-type outer --transition-duration 0.8
exec-once = swww img ~/Pictures/wall/this-wallpaper-is-not-available.png --transition-fps 60 --transition-type outer --transition-duration 0.8
exec-once = wl-paste --type text --watch cliphist store # clipboard
exec-once = wl-paste --type image --watch cliphist store
#exec-once = rm "$HOME/.cache/cliphist/db"   #it'll delete history at every restart    
exec-once = hypridle
exec-once = hyprpm reload -n

exec-once=dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
# exec-once = $terminal
# exec-once = nm-applet &
# exec-once = waybar & hyprpaper & firefox

#############################
### ENVIRONMENT VARIABLES ###
#############################

# See https://wiki.hyprland.org/Configuring/Environment-variables/

env = XCURSOR_SIZE,24
env = HYPRCURSOR_SIZE,24

# Firefox
env = MOZ_ENABLE_WAYLAND,1

# Nvidia
# env = LIBVA_DRIVER_NAME,nvidia
# env = XDG_SESSION_TYPE,wayland
# env = GBM_BACKEND,nvidia-drm
# env = __GLX_VENDOR_LIBRARY_NAME,nvidia # remove if firefox crashes
# env = NVD_BACKEND,direct
# env = ELECTRON_OZONE_PLATFORM_HINT,auto

# QT
env = QT_QPA_PLATFORM,wayland
env = QT_QPA_PLATFORMTHEME,qt5ct
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
env = QT_AUTO_SCREEN_SCALE_FACTOR,1
env = QT_STYLE_OVERRIDE,kvantum

# Toolkit Backend Variables
env = GDK_BACKEND,wayland,x11,*
env = SDL_VIDEODRIVER,wayland
env = CLUTTER_BACKEND,wayland

# XDG Specifications
env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland


#####################
### LOOK AND FEEL ###
#####################

# Refer to https://wiki.hyprland.org/Configuring/Variables/

# source=~/.cache/wal/colors-hyprland.conf

# https://wiki.hyprland.org/Configuring/Variables/#general
general { 
    gaps_in = 2
    gaps_out = 2

    border_size = 0

    # https://wiki.hyprland.org/Configuring/Variables/#variable-types for info about colors
    # col.active_border = rgb(8aadf4) rgb(24273A) rgb(24273A) rgb(8aadf4) 45deg
    # col.inactive_border = rgb(24273A) rgb(24273A) rgb(24273A) rgb(27273A) 45deg

    # Set to true enable resizing windows by clicking and dragging on borders and gaps
    resize_on_border = true 

    # Please see https://wiki.hyprland.org/Configuring/Tearing/ before you turn this on
    allow_tearing = false

    # layout = dwindle
    layout = hy3
    # layout = master
}

# https://wiki.hyprland.org/Configuring/Variables/#decoration
decoration {
    rounding = 0

    # Change transparency of focused and unfocused windows
    active_opacity = 1.0
    inactive_opacity = 1.0

    # https://wiki.hyprland.org/Configuring/Variables/#blur
    blur {
        enabled = true
        size = 1
        passes = 1
        new_optimizations = true
        vibrancy = 0
        ignore_opacity = true
    }
}

# https://wiki.hyprland.org/Configuring/Variables/#animations
animations {
    enabled = true
    bezier = wind, 0.05, 0.9, 0.1, 1.05
    bezier = winIn, 0.1, 1.1, 0.1, 1.1
    bezier = winOut, 0.3, -0.3, 0, 1
    bezier = liner, 1, 1, 1, 1
    animation = windows, 1, 3, wind, slide
    animation = windowsIn, 1, 3, winIn, slide
    animation = windowsOut, 1, 3, winOut, slide
    animation = windowsMove, 1, 3, wind, slide
    animation = border, 1, 1, liner
    animation = borderangle, 1, 30, liner, loop
    animation = fade, 1, 3, default
    animation = workspaces, 1, 3, wind
}

# See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
dwindle {
    pseudotile = true # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = true # You probably want this
}

# See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
master {
    
}

# https://wiki.hyprland.org/Configuring/Variables/#misc
misc { 
    force_default_wallpaper = 0 # Set to 0 or 1 to disable the anime mascot wallpapers
    disable_hyprland_logo = true # If true disables the random hyprland logo / anime girl background. :(
    disable_splash_rendering = true
    vrr = 0
}

#############
### INPUT ###
#############

# https://wiki.hyprland.org/Configuring/Variables/#input
input {
    kb_layout = us
    kb_variant =
    kb_model =
    kb_options =
    kb_rules =

    follow_mouse = 1
    # force_no_accel = 1

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.

    touchpad {
        natural_scroll = false
    }
}

# https://wiki.hyprland.org/Configuring/Variables/#gestures
gestures {
gesture = 3, horizontal, workspace

}

# Example per-device config
# See https://wiki.hyprland.org/Configuring/Keywords/#per-device-input-configs for more
device {
    # name = epic-mouse-v1
    # sensitivity = -0.5
}

####################
### KEYBINDINGSS ###
####################

# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = ALT # Sets "Windows" key as main modifier

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, return, exec, $terminal
# bind = $mainMod, B, exec, $browser
# bind = $mainMod, O, exec, $notes
# bind = $mainMod, C, exec, $editor
# bind = $mainMod, S, exec, $editor-alt
bind = $mainMod, Q, killactive,
# bind = $mainMod, W, caelestia wallpaper -r ~/Pictures/Wallpapers/,
# bind = SUPER, w, exec, caelestia wallpaper -r ~/Pictures/Wallpapers/
bind = $mainMod, M, exit,
bind = $mainMod, n, exec, $fileManager
bind = $mainMod+Shift,space , togglefloating,
bind = $mainMod, space, exec, $menu
bind = $mainMod, f, fullscreen 
# bind = $mainMod, P, pseudo, # dwindle
# bind = $mainMod, J, togglesplit, # dwindle

# bind = SUPER, E, exec, jome -d | wl-copy #Emojipicker + clipboard copy

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

bind = $mainMod, h, movefocus, l
bind = $mainMod, l, movefocus, r
bind = $mainMod, k, movefocus, u
bind = $mainMod, j, movefocus, d

# bind = $mainMod, left, hy3:movefocus, l
# bind = $mainMod, right, hy3:movefocus, r
# bind = $mainMod, up, hy3:movefocus, u
# bind = $mainMod, down, hy3:movefocus, d
#
# bind = $mainMod, h, hy3:movefocus, l
# bind = $mainMod, l, hy3:movefocus, r
# bind = $mainMod, k, hy3:movefocus, u
# bind = $mainMod, j, hy3:movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# bind = $mainMod SHIFT, left,  hy3:movewindow, l
# bind = $mainMod SHIFT, right, hy3:movewindow, r
# bind = $mainMod SHIFT, up,    hy3:movewindow, u
# bind = $mainMod SHIFT, down,  hy3:movewindow, d
#
# bind = $mainMod SHIFT, l,  hy3:movewindow, l
# bind = $mainMod SHIFT, h, hy3:movewindow, r
# bind = $mainMod SHIFT, k,    hy3:movewindow, u
# bind = $mainMod SHIFT, j,  hy3:movewindow, d
# Swap focused window left / right / up / down
bind = $mainMod SHIFT, H, swapwindow, l
bind = $mainMod SHIFT, L, swapwindow, r
bind = $mainMod SHIFT, K, swapwindow, u
bind = $mainMod SHIFT, J, swapwindow, d


bind = $mainMod SHIFT, left, swapwindow, l
bind = $mainMod SHIFT, right, swapwindow, r
bind = $mainMod SHIFT, up, swapwindow, u
bind = $mainMod SHIFT, down, swapwindow, d
# Example special workspace (scratchpad)
#bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, minus, movetoworkspace, special:magic
bind = $mainMod, minus, togglespecialworkspace, magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

bind = $mainMod, Tab, workspace, e+1
bind = $mainMod+Shift, Tab, workspace, e-1
# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Move/resize windows + Mouse
bindm = $mainMod, Z, movewindow
bindm = $mainMod, X, resizewindow

# Resize windows
binde = $mainMod+Ctrl, Right, resizeactive, 30 0
binde = $mainMod+Ctrl, Left, resizeactive, -30 0
binde = $mainMod+Ctrl, Up, resizeactive, 0 -30
binde = $mainMod+Ctrl, Down, resizeactive, 0 30

binde = $mainMod+Ctrl, l, resizeactive, 30 0
binde = $mainMod+Ctrl, h, resizeactive, -30 0
binde = $mainMod+Ctrl, k, resizeactive, 0 -30
binde = $mainMod+Ctrl, j, resizeactive, 0 30

# Clipboard
# bind = SUPER, V, exec, cliphist list | tofi -c ~/.config/tofi/configV | cliphist decode | wl-copy
bind = Ctrl+Alt, v, exec, cliphist list | tofi -c ~/.config/tofi/configV | cliphist decode | wl-copy

# Colour Picker
# bind = $mainMod, P, exec, $colorPicker | wl-copy 

# Mute and lock the system
bind = SUPER, L, exec, pactl set-sink-mute @DEFAULT_SINK@ 1 && hyprlock
# bind = SUPER, m, exec, pactl set-source-mute @DEFAULT_SOURCE@ toggle
bind = SUPER, m, exec, bash -c 'pamixer --default-source -t && if [ $(pamixer --default-source --get-mute) = true ]; then notify-send "Microphone: Muted" -i mic-off -h string:x-canonical-private-synchronous:mic; else notify-send "Microphone: On" -i mic-on -h string:x-canonical-private-synchronous:mic; fi'


# Screen locking
# bind = SUPER, L, exec, hyprlock
# bind = SUPER, L, exec, caelestia ipc call lock lock
# bind = SUPER, L, exec, qs -c caelestia ipc call lock lock

# wlogout
bind = SUPER, ESCAPE, exec, wlogout
bind = SUPER, b, exec, blueberry

# waybar
bind = Ctrl, Escape, exec, killall waybar || waybar # toggle waybar
bind = $mainMod, w, exec, ~/.config/hypr/scripts/WallpaperSelect.sh

# Screenshot 
# add --cursor flag to include cursor also, --freeze flag to freeze before selection
# bind = , Print, exec, grimblast --notify copysave screen # Entire screen + clipboard copy
# bind = SUPER, Print, exec, grimblast --notify copysave active # current Active window only + clipboard copy
bind = ,Print, exec, grimblast --notify copysave active # current Active window only + clipboard copy
bind = Ctrl, Print, exec, grimblast --notify copysave area # Select area to take screenshot

# Volume and Media Control
# bind = , XF86AudioRaiseVolume, exec, pamixer -i 5 
# bind = , XF86AudioLowerVolume, exec, pamixer -d 5 
# bind = , XF86AudioMicMute, exec, pamixer --default-source -m
# bind = , XF86AudioMute, exec, pamixer -t
bind = , XF86AudioRaiseVolume, exec, bash -c 'pamixer -i 5 && notify-send "Volume: $(pamixer --get-volume)%" -h int:value:$(pamixer --get-volume) -h string:x-canonical-private-synchronous:volume'
bind = , XF86AudioLowerVolume, exec, bash -c 'pamixer -d 5 && notify-send "Volume: $(pamixer --get-volume)%" -h int:value:$(pamixer --get-volume) -h string:x-canonical-private-synchronous:volume'
bind = , XF86AudioMicMute, exec, bash -c 'pamixer --default-source -t && if [ $(pamixer --default-source --get-mute) = true ]; then notify-send "Microphone: Muted" -i mic-off -h string:x-canonical-private-synchronous:mic; else notify-send "Microphone: On" -i mic-on -h string:x-canonical-private-synchronous:mic; fi'
bind = , XF86AudioMute, exec, bash -c 'pamixer -t && if [ $(pamixer --get-mute) = true ]; then notify-send "Volume: Muted" -h int:value:0 -h string:x-canonical-private-synchronous:volume; else notify-send "Volume: $(pamixer --get-volume)%" -h int:value:$(pamixer --get-volume) -h string:x-canonical-private-synchronous:volume; fi'
bind = , XF86AudioPlay, exec, playerctl play-pause
bind = , XF86AudioPause, exec, playerctl play-pause
bind = , XF86AudioNext, exec, playerctl next
bind = , XF86AudioPrev, exec, playerctl previous

# Screen brightness
# bind = , XF86MonBrightnessUp, exec, brightnessctl s +1%
# bind = , XF86MonBrightnessDown, exec, brightnessctl s 1%-
bind = , XF86MonBrightnessUp, exec, bash -c 'brightnessctl s +1% && notify-send "Brightness: $(($(brightnessctl g) * 100 / $(brightnessctl m)))%" -h int:value:$(($(brightnessctl g) * 100 / $(brightnessctl m))) -h string:x-canonical-private-synchronous:brightness'
bind = , XF86MonBrightnessDown, exec, bash -c 'brightnessctl s 1%- && notify-send "Brightness: $(($(brightnessctl g) * 100 / $(brightnessctl m)))%" -h int:value:$(($(brightnessctl g) * 100 / $(brightnessctl m))) -h string:x-canonical-private-synchronous:brightness'


# bind = SUPER, SPACE, exec, qs -c noctalia-shell ipc call launcher toggle
# bind = SUPER, S, exec, qs -c noctalia-shell ipc call sidePanel toggle
# bind = SUPER, comma, exec, qs -c noctalia-shell ipc call settings toggle
# bindel = , XF86AudioRaiseVolume, exec, qs -c noctalia-shell ipc call volume increase
# bindel = , XF86AudioLowerVolume, exec, qs -c noctalia-shell ipc call volume decrease
# bindl = , XF86AudioMute, exec, qs -c noctalia-shell ipc call volume muteOutput
# bindel = , XF86MonBrightnessUp, exec, qs -c noctalia-shell ipc call brightness increase
# bindel = , XF86MonBrightnessDown, exec, qs -c noctalia-shell ipc call brightness decrease
# bind = SUPER, V, exec, qs -c noctalia-shell ipc call launcher clipboard
# bind = SUPER, C, exec, qs -c noctalia-shell ipc call launcher calculator
# bind = SUPER, M, exec, qs -c noctalia-shell ipc call lockScreen toggle

##############################
### WINDOWS AND WORKSPACES ###
##############################

## Use hyprctl clients to look for window class

# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
# See https://wiki.hyprland.org/Configuring/Workspace-Rules/ for workspace rules

# Example windowrule v1
# windowrule = float, ^(kitty)$
windowrule = float, class:^(jome)$

# Example windowrule v2
# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$
windowrulev2 = opacity 0.90 0.90,class:^(Thorium-browser)$
windowrulev2 = opacity 0.80 0.80,class:^(Code)$
windowrulev2 = opacity 0.80 0.80,class:^(Arduino IDE)$
windowrulev2 = opacity 0.80 0.80,class:^(dev.warp.Warp)$
# windowrulev2 = opacity 0.80 0.80,class:^(obsidian)$
windowrulev2 = opacity 0.80 0.80,class:^(code-url-handler)$
windowrulev2 = opacity 0.80 0.80,class:^(code-insiders-url-handler)$
windowrulev2 = opacity 0.80 0.80,class:^(kitty)$
windowrulev2 = opacity 0.80 0.80,class:^(org.gnome.Nautilus)$
windowrulev2 = opacity 0.80 0.80,class:^(org.kde.ark)$
windowrulev2 = opacity 0.80 0.80,class:^(nwg-look)$
windowrulev2 = opacity 0.80 0.80,class:^(qt5ct)$
windowrulev2 = opacity 0.80 0.80,class:^(qt6ct)$
windowrulev2 = opacity 0.80 0.80,class:^(kvantummanager)$
windowrulev2 = opacity 0.80 0.70,class:^(pavucontrol)$
windowrulev2 = opacity 0.80 0.70,class:^(blueman-manager)$
windowrulev2 = opacity 0.80 0.70,class:^(nm-applet)$
windowrulev2 = opacity 0.70 0.70,class:^(Spotify)$
windowrulev2 = opacity 0.70 0.70,initialTitle:^(Spotify Free)$
windowrulev2 = opacity 0.80 0.70,class:^(nm-connection-editor)$
windowrulev2 = opacity 0.80 0.70,class:^(org.kde.polkit-kde-authentication-agent-1)$
windowrulev2 = opacity 0.80 0.70,class:^(polkit-gnome-authentication-agent-1)$
windowrulev2 = opacity 0.80 0.70,class:^(org.freedesktop.impl.portal.desktop.gtk)$
windowrulev2 = opacity 0.80 0.70,class:^(org.freedesktop.impl.portal.desktop.hyprland)$

windowrulev2 = float,class:^(kvantummanager)$
windowrulev2 = float,class:^(qt5ct)$
windowrulev2 = float,class:^(qt6ct)$
windowrulev2 = float,class:^(nwg-look)$
windowrulev2 = float,class:^(org.kde.ark)$
windowrulev2 = float,class:^(pavucontrol)$
windowrulev2 = float,class:^(blueman-manager)$
windowrulev2 = float,class:^(nm-applet)$
windowrulev2 = float,class:^(nm-connection-editor)$
windowrulev2 = float,class:^(org.kde.polkit-kde-authentication-agent-1)$
windowrulev2 = float,class:^(blueberry)$

# windowrulev2 = suppressevent maximize, class:.* # You'll probably like this.

# layerrule = blur,waybar
layerrule = ignorezero,tofi
layerrule = ignorezero, mako
layerrule = blur,mako

# ---- Caelestia / Quickshell control (calls Caelestia IPC) ----
# Toggle launcher (press)
# bind = SUPER, space, exec, qs -c caelestia ipc call drawers toggle launcher
# # Dashboard toggle
# bind = SUPER, d, exec, qs -c caelestia ipc call drawers toggle dashboard
#
# # Session menu toggle
# bind = SUPER, s, exec, qs -c caelestia ipc call drawers toggle session
#
# # Control Center (open)
# bind = SUPER, c, exec, qs -c caelestia ipc call controlCenter open
#
# # Toggle ALL visible UI (launcher + dashboard + osd + utilities)
# bind = SUPER+Shift, space, exec, qs -c caelestia ipc call drawers toggle showall
#
# Quick: show a toaster info (example bind for testing)
# bind = SUPER, t, exec, qs -c caelestia ipc call toaster info "Test" "Toast from Hyprland" "dialog-information"

